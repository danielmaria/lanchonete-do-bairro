plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'br.com'
version = '1.0.0-POC'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

ext {
	generatedMapperSourcesDir = "${buildDir}/generated-src/mapstruct/main"
	javaLanguageLevel = '17'
	mapstructVersion = "1.6.0.Beta1"
	lombokVersion = "1.18.30"
	lombokMapstructBindingVersion = "0.2.0"
}

configurations {
	mapstruct
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.hsqldb:hsqldb:2.7.1'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.1.0'

	implementation "org.mapstruct:mapstruct:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

}

sourceSets.main {
	ext.originalJavaSrcDirs = java.srcDirs
	java.srcDir "${generatedMapperSourcesDir}"
}

task generateMainMapperClasses(type: JavaCompile) {
	ext.aptDumpDir = file( "${buildDir}/tmp/apt/mapstruct" )
	destinationDir = aptDumpDir

	classpath = compileJava.classpath + configurations.mapstruct
	source = sourceSets.main.originalJavaSrcDirs
	ext.sourceDestDir = file ( "$generatedMapperSourcesDir" )

	options.define(
			compilerArgs: [
					"-nowarn",
					"-proc:only",
					"-encoding", "UTF-8",
					"-processor", "org.mapstruct.ap.MappingProcessor",
					"-s", sourceDestDir.absolutePath,
					"-source", rootProject.javaLanguageLevel,
					"-target", rootProject.javaLanguageLevel,
			]
	);

	inputs.dir source
	outputs.dir generatedMapperSourcesDir;
	doFirst {
		sourceDestDir.mkdirs()
	}
	doLast {
		aptDumpDir.delete()
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
